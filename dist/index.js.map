{"version":3,"sources":["../src/index.js"],"names":["Shorthand","sel","filter","includes","key","val","split","x","ArrayShorthand","Function","constructor","arr","_inner","Proxy","get","target","prop","arrayProp","bind","apply","thisArg","args","Ash"],"mappings":";;;;;AAAA,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,QAAG,CAACA,GAAJ,EACI,OAAO,IAAP;;AAEJ;AACA,QAAG,OAAOA,GAAP,IAAc,UAAjB,EACI,OAAO,KAAKC,MAAL,CAAYD,GAAZ,CAAP;;AAEJ;AACA,QAAGA,IAAIE,QAAJ,CAAa,GAAb,CAAH,EAAqB;AACjB,YAAI,CAACC,GAAD,EAAMC,GAAN,IAAaJ,IAAIK,KAAJ,CAAU,GAAV,CAAjB;AACA,eAAO,KAAKJ,MAAL,CAAYK,KAAKA,EAAEH,GAAF,KAAUC,GAA3B,CAAP;AACH;AACJ;;AAED,MAAMG,cAAN,SAA6BC,QAA7B,CAAsC;AAClCC,gBAAY,GAAGC,GAAf,EAAmB;AACf;AACA,aAAKC,MAAL,GAAc,CAAC,GAAGD,GAAJ,CAAd;;AAEA,eAAO,IAAIE,KAAJ,CAAU,IAAV,EAAgB;AACnBC,iBAAK,CAACC,MAAD,EAASC,IAAT,KAAkB;AACnB,sBAAMC,YAAY,KAAKL,MAAL,CAAYI,IAAZ,CAAlB;AACA,oBAAGC,SAAH,EAAa;AACT,wBAAG,OAAOA,SAAP,IAAoB,UAAvB,EACI,OAAOA,UAAUC,IAAV,CAAe,KAAKN,MAApB,CAAP,CADJ,KAGI,OAAOK,SAAP;AACP;AACJ,aATkB;AAUnBE,mBAAO,CAACJ,MAAD,EAASK,OAAT,EAAkBC,IAAlB,KAA2B;AAC9B,uBAAOrB,UAAUkB,IAAV,CAAe,KAAKN,MAApB,EAA4B,GAAGS,IAA/B,CAAP;AACH;AAZkB,SAAhB,CAAP;AAcH;AAnBiC;;QAsBXC,G,GAAlBd,c","file":"index.js","sourcesContent":["function Shorthand(sel) {\r\n    if(!sel)\r\n        return this\r\n    \r\n    // fn filter shorthand\r\n    if(typeof sel == \"function\")\r\n        return this.filter(sel)\r\n\r\n    // key=val filter shorthand \r\n    if(sel.includes(\"=\")){\r\n        let [key, val] = sel.split(\"=\")\r\n        return this.filter(x => x[key] == val)\r\n    }\r\n}\r\n\r\nclass ArrayShorthand extends Function {\r\n    constructor(...arr){\r\n        super()\r\n        this._inner = [...arr]\r\n\r\n        return new Proxy(this, {\r\n            get: (target, prop) => {\r\n                const arrayProp = this._inner[prop]\r\n                if(arrayProp){\r\n                    if(typeof arrayProp == \"function\")\r\n                        return arrayProp.bind(this._inner)\r\n                    else\r\n                        return arrayProp\r\n                }\r\n            },\r\n            apply: (target, thisArg, args) => {\r\n                return Shorthand.bind(this._inner)(...args)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport { ArrayShorthand as Ash }\r\n"]}